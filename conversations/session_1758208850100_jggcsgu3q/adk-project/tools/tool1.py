# tools/esg_briefing_tool.py
from ibm_watsonx_orchestrate.agent_builder.tools import tool
from ibm_watsonx_orchestrate.agent_builder.tools import ToolPermission
import datetime

@tool(name="format_esg_summary", permission=ToolPermission.ADMIN)
def format_esg_summary(raw_text: str, company_name: str, topic: str) -> str:
    """
    Formats raw text about a company's ESG policy into a structured briefing note.
    This tool is ideal for taking unstructured paragraphs and presenting them in a professional,
    easy-to-read markdown format suitable for client reports or internal summaries.

    Args:
        raw_text (str): The unstructured text retrieved from the ESG report. This is typically the direct output from a knowledge base search.
        company_name (str): The name of the company being analyzed (e.g., 'EcoSolutions Ltd.').
        topic (str): The specific ESG topic (e.g., 'Carbon Emissions Targets', 'Board Diversity').

    Returns:
        str: A professionally formatted markdown string for the briefing note, including a header, key findings, and a footer.
    """
    try:
        current_date = datetime.date.today().strftime("%Y-%m-%d")
        
        header = f"## ESG Briefing Note: {company_name} - {topic}\n"
        header += f"**Date:** {current_date}\n\n"
        
        body = f"**Key Findings:**\n> {raw_text.strip()}\n\n"
        
        footer = "---\n*Generated by watsonx Orchestrate ESG Intelligence Engine.*"
        
        return header + body + footer
    except Exception as e:
        # Basic error handling
        return f"Error formatting summary: {str(e)}"